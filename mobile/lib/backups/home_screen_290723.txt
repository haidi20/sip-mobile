import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:sip/bloc/product_bloc.dart';
import 'package:sip/constants.dart';
import 'package:sip/model/product.dart';
import 'package:sip/module/home/controller/home_controller.dart';
import 'package:sip/module/home/view/product_card.dart';
import 'package:sip/module/main_menu/view/search_input.dart';
import 'package:sip/repository/product_repository.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  HomeController homeController = HomeController();
  ProductBloc productBloc = ProductBloc();

  @override
  void initState() {
    productBloc.fetchProduct();

    super.initState();
  }

  @override
  void dispose() {
    productBloc.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    // var size = MediaQuery.of(context).size;

    return Column(
      crossAxisAlignment: CrossAxisAlignment.end,
      children: <Widget>[
        Padding(
          padding: const EdgeInsets.only(
            left: paddingLeftGenerale,
            right: paddingRightGenerale,
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              const SearchInput(),
              const SizedBox(
                height: 15,
              ),
              Text(
                homeController.title,
                style: const TextStyle(
                    fontSize: 35, fontWeight: FontWeight.bold, height: 1.5),
              ),
              const SizedBox(
                height: 10,
              ),
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                child: FutureBuilder<List<Product>>(
                  future: ProductRepository().fetchData(),
                  builder: (context, snapshot) {
                    if (snapshot.) {
                      return const Text("Loading...");
                    } else if (snapshot.hasError) {
                      return Text("Error: ${snapshot.error}");
                    } else {
                      List<Product> data = snapshot.data ?? [];
                      if (data.isNotEmpty) {
                        List<Product> products = snapshot.data ?? [];

                        return Row(
                          children: products.map(
                            (Product product) {
                              return GestureDetector(
                                onTap: () {
                                  debugPrint('You tapped on ${product.name}');
                                },
                                child: ProductCard(
                                  imgUrl: product.imgUrl,
                                  name: product.name,
                                ),
                              );
                            },
                          ).toList(),
                        );
                      } else {
                        return const Text("data kosong");
                      }
                    }
                  },
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }
}
